# ! RELEASE NOTES
## 1.0.0 | 2025-10-02
## - initial release

# ================
# Partner Engine
# ================
# icon: "palette"
#
# name_en: "Scene Activation"
# name_de: "Szene aktivieren"
# subtitle_en: "Smart Button"
# subtitle_de: "Smart Button"
#
# short_description_en: "Activate a scene with a single button press from any of your smart buttons."
# short_description_de: "Aktiviere eine Szene mit nur einem Knopfdruck von einem deiner Smart Buttons."
# long_description_en: "The Scene Activation automation allows you to activate any scene in your home with a button press. This works with various smart button types including smarli. relays, Aqara switches, Philips Hue buttons, and Feller controls."
# long_description_de: "Die Szenenaktivierungs-Automatisierung ermÃ¶glicht es dir, jede Szene in deinem Zuhause per Knopfdruck zu aktivieren. Dies funktioniert mit verschiedenen Smart-Button-Typen einschliesslich smarli. Relais, Aqara-Schaltern, Philips Hue-Tasten und Feller-Bedienelementen."
#
# purpose_en: "Comfort" -> Options are (select one): Comfort, Security, Sustainability
# purpose_de: "Komfort"
#
# keywords_en: [scene, button, activate]
# keywords_de: [szene, button, aktivieren]
# events_en: [button press]
# events_de: [Knopfdruck]
# highlight: true
# deploy: false

blueprint:
  ############
  # Metadata #
  ############
  name: smarli. Scene Activation Button
  description: >
    # ðŸ’¡ smarli. Scene Activation Button

    This automation will activate a selected scene when any of your configured smart buttons are pressed. It supports smarli. relays, Aqara mini switches, and Philips Hue buttons.

    *Version 1.0.0 | 2025-10-02*

    <details>
    <summary><b>How to set it up</b></summary>

    This blueprint supports multiple button types through a simple entity selector:

      1. Select the scene you want to activate
      2. Select your smart buttons:
         - For **smarli. Relays**: Select the light entity (triggers on any state change)
         - For **Aqara/Hue buttons**: Select the battery sensor (triggers on button press)
      3. (Optional) For Aqara devices, choose which press types trigger the scene (single, double, triple)
      4. (Optional) Add a delay before activating the scene
    </details>


    All input fields are required unless they are marked as ` (optional) `.
  domain: automation
  author: loocd [smarli. AG]
  source_url: https://github.com/smarli-AG/smarli-blueprints/blob/main/automation/activateSceneSmartButton.yaml
  homeassistant:
    min_version: 2024.10.0

  ###############
  # User Inputs #
  ###############
  input:
    trigger_inputs:
      name: Trigger Inputs
      icon: mdi:star-box-multiple
      description: These inputs are used to set the automation triggers
      input:
        smart_buttons:
          # translation:
          #   name:
          #     en: Smart Buttons
          #     de: Smart Buttons
          #   description:
          #     en: Select your smart buttons as entities OR devices. You can mix both types.
          #     de: WÃ¤hle deine Smart Buttons als EntitÃ¤ten ODER GerÃ¤te aus. Du kannst beide Typen mischen.
          name: Smart Buttons
          description: Select your smart buttons as entities OR devices. You can mix both types.
          selector:
            target:
              entity:
                - integration: mqtt
                  domain: light
                - integration: zha
                  domain: light
              device:
                - integration: mqtt
                - integration: zha

        aqara_actions:
          # translation:
          #   name:
          #     en: Aqara Actions (optional)
          #     de: Aqara-Aktionen (optional)
          #   description:
          #     en: Which Aqara button press types should activate the scene?
          #     de: Welche Aqara-Tastendrucktypen sollen die Szene aktivieren?
          name: Aqara Actions (optional)
          description: Which Aqara button press types should activate the scene?
          selector:
            select:
              options:
                - label: Single Press
                  # translation:
                  #   label:
                  #     en: Single Press
                  #     de: Einfacher Druck
                  value: "single"
                - label: Double Press
                  # translation:
                  #   label:
                  #     en: Double Press
                  #     de: Doppelter Druck
                  value: "double"
                - label: Triple Press
                  # translation:
                  #   label:
                  #     en: Triple Press
                  #     de: Dreifacher Druck
                  value: "triple"
              multiple: true
              mode: list
          default: ["single"]

    condition_inputs:
      name: Condition Inputs
      icon: mdi:help-box-multiple
      description: These inputs are used to set the automation conditions

    action_inputs:
      name: Action Inputs
      icon: mdi:play-box-multiple
      description: These inputs are used to set the actions
      input:
        target_scene:
          # translation:
          #   name:
          #     en: Scene to Activate
          #     de: Zu aktivierende Szene
          #   description:
          #     en: Select the scene that should be activated when a button is pressed.
          #     de: WÃ¤hle die Szene aus, die aktiviert werden soll, wenn ein Button gedrÃ¼ckt wird.
          name: Scene to Activate
          description: Select the scene that should be activated when a button is pressed.
          selector:
            entity:
              filter:
                - domain: scene

        delay:
          # translation:
          #   name:
          #     en: Delay (optional)
          #     de: VerzÃ¶gerung (optional)
          #   description:
          #     en: Add a delay before activating the scene.
          #     de: FÃ¼ge eine VerzÃ¶gerung hinzu, bevor die Szene aktiviert wird.
          name: Delay (optional)
          description: Add a delay before activating the scene.
          selector:
            duration:
          default: "00:00:00"

    custom_inputs: # leave these as is - should be present in any blueprint
      name: "DANGER ZONE: Additional Custom Inputs"
      icon: mdi:alert
      description: >-
        **WATCH OUT!**

        This is advanced functionality and should only be used if you know what you're doing!


        Use this section to define custom triggers and conditions, as well as actions that will run at the end of the automation.
      collapsed: true
      input:
        custom_triggers:
          name: Custom triggers (optional)
          description: >-
            Use this to define custom triggers in addition to the default triggers.
          selector:
            trigger:
          default: []
        custom_conditions:
          name: Custom conditions (optional)
          description: >-
            Use this to define custom conditions in addition to the default conditions.
          selector:
            condition:
          default: []
        custom_actions:
          name: Custom actions (optional)
          description: >-
            Use this to define custom actions that should be executed at the end of this automation.
          selector:
            action:
          default: []

#########################
# Variables Translation #
#########################

# this is required in order to use inputs as variables within templates
variables:
  smart_buttons: !input smart_buttons
  aqara_actions: !input aqara_actions

  # Extract entities and devices from target selector
  button_entities: "{{ smart_buttons.entity_id | default([]) }}"
  button_devices: "{{ smart_buttons.device_id | default([]) }}"

##############
# Automation #
##############

mode: single
max_exceeded: silent

triggers:
  # Light entity triggers (smarli. relays) - any state change (onâ†’off or offâ†’on)
  - trigger: state
    entity_id: !input smart_buttons
    from: "off"
    to: "on"
    id: "light_toggle"
  - trigger: state
    entity_id: !input smart_buttons
    from: "on"
    to: "off"
    id: "light_toggle"

  # Event triggers for button devices (Aqara, Hue)
  - trigger: event
    event_type:
      - zha_event
    id: "button_press"

  ## Custom triggers
  - triggers: !input custom_triggers

conditions: # by default, conditions follow an AND logic
  - condition: or
    conditions:
      # Allow all light entity triggers
      - condition: trigger
        id: "light_toggle"

      # For button press events, check if device is in our selected devices
      - condition: and
        conditions:
          - condition: trigger
            id: "button_press"
          - condition: template
            value_template: >
              {% set device = trigger.event.data.device_id | default('') %}
              {{ device in button_devices }}
          # Check if action matches selected Aqara actions (for Aqara devices)
          - condition: template
            value_template: >
              {% set action = trigger.event.data.command | default('') %}
              {{ action in aqara_actions or action not in ['single', 'double', 'triple'] }}

  ## Custom conditions
  - condition: and
    conditions: !input custom_conditions

actions:
  - delay: !input delay
  - action: scene.turn_on
    metadata: {}
    target:
      entity_id: !input target_scene
    data:
      transition: 0

  ## Custom actions
  - if:
      - condition: template
        value_template: "{{ custom_actions is not none }}"
    then: !input custom_actions
